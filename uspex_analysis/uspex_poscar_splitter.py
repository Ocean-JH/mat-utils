#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
split_and_rename_poscars.py

This script parses the 'extended_convex_hull_POSCARS' file generated by USPEX,
splits it into individual POSCAR files, and renames each based on its index,
USPEX structure ID, and chemical formula derived from composition lines.

Main functionalities:
- Identify POSCAR blocks using a keyword (e.g., "EA").
- Extract structural ID and chemical formula for renaming.
- Save each POSCAR to a new file under a designated output directory.

Author: Wang Jianghai @BUAA
"""


import os
import re


def parse_file():
    # input_file = input('Input SourceFile:')        # File name
    # keyword = input('Slice Keyword:')              # Keyword for segmentation

    input_file = r'results1\extended_convex_hull_POSCARS'
    output_path = r'POSCARS'
    keyword = 'EA'

    if not os.path.exists(output_path):
        os.makedirs(output_path)

    line_index = []
    line_number = 1
    with open(input_file, 'r') as f:
        for eachLine in f:
            query = re.search(keyword, eachLine)            # Query keyword
            if query:
                line_index.append(line_number)              # Locate keyword by line number
            line_number += 1
        line_index.append(line_number)

    size = int(len(line_index))
    for i in range(0, size - 1):
        index_start = line_index[i]
        index_end = line_index[i + 1]
        content = linecache.getlines(input_file)[index_start - 1: index_end - 1]        # Content interception
        output_name = f"No-{i}_POSCAR"
        with open(os.path.join(output_path, output_name), 'w') as f:                    # Save output
            for line in content:
                f.write(line)

        '''Rename file based on stability and formula'''
        structure_id = linecache.getline(os.path.join(output_path, output_name), 1).split()[0]
        structure_id = structure_id.replace('EA', '')
        element = linecache.getline(os.path.join(output_path, output_name), 6).split()                     # Extract chemical elements
        stoichiometry = re.findall(r"\d+\.?\d*",
                                   linecache.getline(os.path.join(output_path, output_name), 7))        # Extract stoichiometry

        '''Extract formula'''
        formula = ''
        for n in range(len(element)-1):
            formula += element[n] + stoichiometry[n] + '-'
        formula += element[len(element)-1] + stoichiometry[len(element)-1]

        os.rename(os.path.join(output_path, output_name),
                  os.path.join(output_path, f"{i + 1}-{structure_id}_POSCAR_{formula}"))


if __name__ == "__main__":
    parse_file()
